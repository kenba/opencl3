[package]
name = "opencl3"
version = "0.11.0"
authors = ["Ken Barker <ken.barker@via-technology.aero>"]
description = "A Rust implementation of the Khronos OpenCL 3.0 API and extensions."
documentation = "https://docs.rs/opencl3/"
homepage = "https://github.com/kenba/opencl3"
repository = "https://github.com/kenba/opencl3"
readme = "README.md"
keywords = ["opencl", "gpu", "gpgpu"]
categories = ["api-bindings", "asynchronous"]
license = "Apache-2.0"
edition = "2024"

[features]

static  = ["cl3/static"]

CL_VERSION_1_1 = ["cl3/CL_VERSION_1_1"]
CL_VERSION_1_2 = ["cl3/CL_VERSION_1_2"]
CL_VERSION_2_0 = ["cl3/CL_VERSION_2_0"]
CL_VERSION_2_1 = ["cl3/CL_VERSION_2_1"]
CL_VERSION_2_2 = ["cl3/CL_VERSION_2_2"]
CL_VERSION_3_0 = ["cl3/CL_VERSION_3_0"]

cl_apple_setmemobjectdestructor = ["cl3/cl_apple_setmemobjectdestructor"]
cl_apple_contextloggingfunctions = ["cl3/cl_apple_contextloggingfunctions"]

cl_khr_icd = ["cl3/cl_khr_icd"]
cl_khr_il_program = ["cl3/cl_khr_il_program"]
cl_khr_terminate_context = ["cl3/cl_khr_terminate_context"]
cl_khr_create_command_queue = ["cl3/cl_khr_create_command_queue"]
cl_ext_device_fission = ["cl3/cl_ext_device_fission"]
cl_ext_migrate_memobject = ["cl3/cl_ext_migrate_memobject"]
cl_qcom_ext_host_ptr = ["cl3/cl_qcom_ext_host_ptr"]
cl_img_use_gralloc_ptr = ["cl3/cl_img_use_gralloc_ptr"]
cl_img_generate_mipmap = ["cl3/cl_img_generate_mipmap"]
cl_khr_subgroups = ["cl3/cl_khr_subgroups"]
cl_khr_suggested_local_work_size = ["cl3/cl_khr_suggested_local_work_size"]
cl_khr_external_memory = ["cl3/cl_khr_external_memory"]
cl_khr_external_semaphore = ["cl3/cl_khr_external_semaphore"]
cl_khr_external_semaphore_sync_fd = ["cl3/cl_khr_external_semaphore_sync_fd"]
cl_khr_semaphore = ["cl3/cl_khr_semaphore"]
cl_arm_import_memory = ["cl3/cl_arm_import_memory"]
cl_arm_shared_virtual_memory = ["cl3/cl_arm_shared_virtual_memory"]
cl_intel_accelerator = ["cl3/cl_intel_accelerator"]
cl_intel_unified_shared_memory = ["cl3/cl_intel_unified_shared_memory"]
cl_intel_create_buffer_with_properties = ["cl3/cl_intel_create_buffer_with_properties"]
cl_intel_program_scope_host_pipe = ["cl3/cl_intel_program_scope_host_pipe"]
cl_ext_image_requirements_info = ["cl3/cl_ext_image_requirements_info"]
cl_khr_command_buffer = ["cl3/cl_khr_command_buffer"]
cl_khr_command_buffer_multi_device = ["cl3/cl_khr_command_buffer_multi_device"]
cl_khr_command_buffer_mutable_dispatch = ["cl3/cl_khr_command_buffer_mutable_dispatch"]

cl_khr_gl_sharing = ["cl3/cl_khr_gl_sharing"]
cl_khr_gl_event = ["cl3/cl_khr_gl_event"]
cl_khr_egl_image = ["cl3/cl_khr_egl_image"]
cl_khr_egl_event = ["cl3/cl_khr_egl_event"]

cl_khr_dx9_media_sharing = ["cl3/cl_khr_dx9_media_sharing"]
cl_intel_dx9_media_sharing = ["cl3/cl_intel_dx9_media_sharing"]
cl_khr_d3d10_sharing = ["cl3/cl_khr_d3d10_sharing"]
cl_khr_d3d11_sharing = ["cl3/cl_khr_d3d11_sharing"]

cl_loader_info = ["cl3/cl_loader_info"]
cl_pocl_content_size = ["cl3/cl_pocl_content_size"]
cl_ext_buffer_device_address = ["cl3/cl_ext_buffer_device_address"]
cl_loader_layers = ["cl3/cl_loader_layers"]
cl_img_cancel_command = ["cl3/cl_img_cancel_command"]
cl_qcom_perf_hint = ["cl3/cl_qcom_perf_hint"]

# Use dynamic linking instead of static linking
dynamic = ["cl3/dynamic"]

# Default features:
default = ["dynamic"]

[dependencies]
libc = "0.2"
cl3 = "0.13"
serde = { version = "1.0", optional = true }

[dev-dependencies]
serde_json = "1.0"
opencl3 = { path = ".", features = ["dynamic", "serde"] }

[lints.clippy]
enum_glob_use = "deny"
nursery = "deny"
unwrap_used = "deny"
